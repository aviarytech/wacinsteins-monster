---
kind: Template
apiVersion: v1
metadata:
  name: mongo
  annotations:
    openshift.io/display-name: Mongo Template
    description: Template for aviary one
    tags: mongo
message: |-
  Deployed a mongo database
labels:
  template: mongo
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: mongo
      labels:
        app: mongo
        template: mongo
        destroy: true
    spec:
      storageClassName: aws-efs
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: mongo
      template: mongo
      destroy: true
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
    spec:
      replicas: 1
      test: false
      selector:
        name: mongo
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "true"
          labels:
            app: mongo
            name: mongo
        spec:
          volumes:
            - name: db-data
              persistentVolumeClaim:
                claimName: mongo
          containers:
            - name: mongo
              image: "mongo:latest"
              ports:
                - containerPort: ${{DBPORT}}
                  protocol: TCP
              env:
                - name: MONGODB_USER
                  value: ${DBUSER}
                - name: MONGODB_PASSWORD
                  value: ${DBPASSWORD}
                - name: MONGODB_ADMIN_PASSWORD
                  value: ${DBADMINPASSWORD}
                - name: MONGODB_DATABASE
                  value: ${DBNAME}
              resources:
                requests:
                  cpu: "10m"
                  memory: "10Mi"
                limits:
                  cpu: "2000m"
                  memory: "6000Mi"
              volumeMounts:
                - name: "db-data"
                  mountPath: "/var/lib/mongodb/data"
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities: {}
                privileged: false
              livenessProbe:
                exec:
                  command:
                    - mongo
                    - --eval
                    - db.adminCommand('ping')
                initialDelaySeconds: 30
                timeoutSeconds: 5
                periodSeconds: 20
                failureThreshold: 15
              readinessProbe:
                exec:
                  command:
                    - mongo
                    - --eval
                    - db.adminCommand('ping')
                initialDelaySeconds: 30
                timeoutSeconds: 5
                periodSeconds: 20
                failureThreshold: 15
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mongo
            from:
              kind: ImageStreamTag
              name: mongo:latest
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        activeDeadlineSeconds: 21600
  - kind: Service
    apiVersion: v1
    metadata:
      name: mongo
      template: aca-py
      labels:
        app: aca-py
    spec:
      selector:
        name: mongo
      ports:
        - protocol: TCP
          name: tcp
          port: ${{DBPORT}}
parameters:
  - name: DBPORT
    required: true
  - name: DBPASSWORD
    required: true
  - name: DBADMINPASSWORD
    required: true
  - name: DBUSER
    required: true
  - name: DBNAME
    required: true